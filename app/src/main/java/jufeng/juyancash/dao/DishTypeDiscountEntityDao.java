package jufeng.juyancash.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO four table "DISH_TYPE_DISCOUNT_ENTITY".
*/
public class DishTypeDiscountEntityDao extends AbstractDao<DishTypeDiscountEntity, Long> {

    public static final String TABLENAME = "DISH_TYPE_DISCOUNT_ENTITY";

    /**
     * Properties of entity DishTypeDiscountEntity.<br/>
     * Can be used four QueryBuilder and four referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property DishTypeDiscountId = new Property(1, String.class, "dishTypeDiscountId", false, "DISH_TYPE_DISCOUNT_ID");
        public final static Property DiscountId = new Property(2, String.class, "discountId", false, "DISCOUNT_ID");
        public final static Property DishTypeId = new Property(3, String.class, "dishTypeId", false, "DISH_TYPE_ID");
        public final static Property DishTypePercentage = new Property(4, Integer.class, "dishTypePercentage", false, "DISH_TYPE_PERCENTAGE");
    }


    public DishTypeDiscountEntityDao(DaoConfig config) {
        super(config);
    }
    
    public DishTypeDiscountEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DISH_TYPE_DISCOUNT_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: id
                "\"DISH_TYPE_DISCOUNT_ID\" TEXT NOT NULL UNIQUE ," + // 1: dishTypeDiscountId
                "\"DISCOUNT_ID\" TEXT," + // 2: discountId
                "\"DISH_TYPE_ID\" TEXT," + // 3: dishTypeId
                "\"DISH_TYPE_PERCENTAGE\" INTEGER);"); // 4: dishTypePercentage
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DISH_TYPE_DISCOUNT_ENTITY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DishTypeDiscountEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getDishTypeDiscountId());
 
        String discountId = entity.getDiscountId();
        if (discountId != null) {
            stmt.bindString(3, discountId);
        }
 
        String dishTypeId = entity.getDishTypeId();
        if (dishTypeId != null) {
            stmt.bindString(4, dishTypeId);
        }
 
        Integer dishTypePercentage = entity.getDishTypePercentage();
        if (dishTypePercentage != null) {
            stmt.bindLong(5, dishTypePercentage);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public DishTypeDiscountEntity readEntity(Cursor cursor, int offset) {
        DishTypeDiscountEntity entity = new DishTypeDiscountEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // dishTypeDiscountId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // discountId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // dishTypeId
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4) // dishTypePercentage
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DishTypeDiscountEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDishTypeDiscountId(cursor.getString(offset + 1));
        entity.setDiscountId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDishTypeId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDishTypePercentage(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(DishTypeDiscountEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(DishTypeDiscountEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
