package jufeng.juyancash.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "TAOCAN_ENTITY".
*/
public class TaocanEntityDao extends AbstractDao<TaocanEntity, Long> {

    public static final String TABLENAME = "TAOCAN_ENTITY";

    /**
     * Properties of entity TaocanEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property TaocanId = new Property(1, String.class, "taocanId", false, "TAOCAN_ID");
        public final static Property TaocanTypeId = new Property(2, String.class, "taocanTypeId", false, "TAOCAN_TYPE_ID");
        public final static Property TaocanName = new Property(3, String.class, "taocanName", false, "TAOCAN_NAME");
        public final static Property TaocanCode = new Property(4, String.class, "taocanCode", false, "TAOCAN_CODE");
        public final static Property TaocanPrice = new Property(5, Float.class, "taocanPrice", false, "TAOCAN_PRICE");
        public final static Property UnitName = new Property(6, String.class, "unitName", false, "UNIT_NAME");
        public final static Property IsAbleDiscount = new Property(7, Integer.class, "isAbleDiscount", false, "IS_ABLE_DISCOUNT");
        public final static Property IsAbleRetreat = new Property(8, Integer.class, "isAbleRetreat", false, "IS_ABLE_RETREAT");
        public final static Property IsOnline = new Property(9, Integer.class, "isOnline", false, "IS_ONLINE");
        public final static Property TaocanCode1 = new Property(10, String.class, "taocanCode1", false, "TAOCAN_CODE1");
    };


    public TaocanEntityDao(DaoConfig config) {
        super(config);
    }
    
    public TaocanEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TAOCAN_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: id
                "\"TAOCAN_ID\" TEXT NOT NULL UNIQUE ," + // 1: taocanId
                "\"TAOCAN_TYPE_ID\" TEXT," + // 2: taocanTypeId
                "\"TAOCAN_NAME\" TEXT," + // 3: taocanName
                "\"TAOCAN_CODE\" TEXT," + // 4: taocanCode
                "\"TAOCAN_PRICE\" REAL," + // 5: taocanPrice
                "\"UNIT_NAME\" TEXT," + // 6: unitName
                "\"IS_ABLE_DISCOUNT\" INTEGER," + // 7: isAbleDiscount
                "\"IS_ABLE_RETREAT\" INTEGER," + // 8: isAbleRetreat
                "\"IS_ONLINE\" INTEGER," + // 9: isOnline
                "\"TAOCAN_CODE1\" TEXT);"); // 10: taocanCode1
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TAOCAN_ENTITY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, TaocanEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getTaocanId());
 
        String taocanTypeId = entity.getTaocanTypeId();
        if (taocanTypeId != null) {
            stmt.bindString(3, taocanTypeId);
        }
 
        String taocanName = entity.getTaocanName();
        if (taocanName != null) {
            stmt.bindString(4, taocanName);
        }
 
        String taocanCode = entity.getTaocanCode();
        if (taocanCode != null) {
            stmt.bindString(5, taocanCode);
        }
 
        Float taocanPrice = entity.getTaocanPrice();
        if (taocanPrice != null) {
            stmt.bindDouble(6, taocanPrice);
        }
 
        String unitName = entity.getUnitName();
        if (unitName != null) {
            stmt.bindString(7, unitName);
        }
 
        Integer isAbleDiscount = entity.getIsAbleDiscount();
        if (isAbleDiscount != null) {
            stmt.bindLong(8, isAbleDiscount);
        }
 
        Integer isAbleRetreat = entity.getIsAbleRetreat();
        if (isAbleRetreat != null) {
            stmt.bindLong(9, isAbleRetreat);
        }
 
        Integer isOnline = entity.getIsOnline();
        if (isOnline != null) {
            stmt.bindLong(10, isOnline);
        }
 
        String taocanCode1 = entity.getTaocanCode1();
        if (taocanCode1 != null) {
            stmt.bindString(11, taocanCode1);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public TaocanEntity readEntity(Cursor cursor, int offset) {
        TaocanEntity entity = new TaocanEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // taocanId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // taocanTypeId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // taocanName
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // taocanCode
            cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5), // taocanPrice
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // unitName
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // isAbleDiscount
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // isAbleRetreat
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // isOnline
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10) // taocanCode1
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, TaocanEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTaocanId(cursor.getString(offset + 1));
        entity.setTaocanTypeId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTaocanName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTaocanCode(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setTaocanPrice(cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5));
        entity.setUnitName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIsAbleDiscount(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setIsAbleRetreat(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setIsOnline(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setTaocanCode1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(TaocanEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(TaocanEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
