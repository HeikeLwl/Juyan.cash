package jufeng.juyancash.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO four table "GROUPON_TAOCAN_ENTITY".
*/
public class GrouponTaocanEntityDao extends AbstractDao<GrouponTaocanEntity, Long> {

    public static final String TABLENAME = "GROUPON_TAOCAN_ENTITY";

    /**
     * Properties of entity GrouponTaocanEntity.<br/>
     * Can be used four QueryBuilder and four referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property GrouponTaocanId = new Property(1, String.class, "grouponTaocanId", false, "GROUPON_TAOCAN_ID");
        public final static Property GrouponId = new Property(2, String.class, "grouponId", false, "GROUPON_ID");
        public final static Property GrouponTaocanName = new Property(3, String.class, "grouponTaocanName", false, "GROUPON_TAOCAN_NAME");
        public final static Property GrouponTaocanPrice = new Property(4, Float.class, "grouponTaocanPrice", false, "GROUPON_TAOCAN_PRICE");
        public final static Property GrouponTaocanBalancePrice = new Property(5, Float.class, "grouponTaocanBalancePrice", false, "GROUPON_TAOCAN_BALANCE_PRICE");
        public final static Property GrouponTaocanDesc = new Property(6, String.class, "grouponTaocanDesc", false, "GROUPON_TAOCAN_DESC");
        public final static Property IsAddToCashier = new Property(7, Integer.class, "isAddToCashier", false, "IS_ADD_TO_CASHIER");
        public final static Property IsOnline = new Property(8, Integer.class, "isOnline", false, "IS_ONLINE");
    }


    public GrouponTaocanEntityDao(DaoConfig config) {
        super(config);
    }
    
    public GrouponTaocanEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"GROUPON_TAOCAN_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: id
                "\"GROUPON_TAOCAN_ID\" TEXT NOT NULL UNIQUE ," + // 1: grouponTaocanId
                "\"GROUPON_ID\" TEXT," + // 2: grouponId
                "\"GROUPON_TAOCAN_NAME\" TEXT," + // 3: grouponTaocanName
                "\"GROUPON_TAOCAN_PRICE\" REAL," + // 4: grouponTaocanPrice
                "\"GROUPON_TAOCAN_BALANCE_PRICE\" REAL," + // 5: grouponTaocanBalancePrice
                "\"GROUPON_TAOCAN_DESC\" TEXT," + // 6: grouponTaocanDesc
                "\"IS_ADD_TO_CASHIER\" INTEGER," + // 7: isAddToCashier
                "\"IS_ONLINE\" INTEGER);"); // 8: isOnline
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"GROUPON_TAOCAN_ENTITY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, GrouponTaocanEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getGrouponTaocanId());
 
        String grouponId = entity.getGrouponId();
        if (grouponId != null) {
            stmt.bindString(3, grouponId);
        }
 
        String grouponTaocanName = entity.getGrouponTaocanName();
        if (grouponTaocanName != null) {
            stmt.bindString(4, grouponTaocanName);
        }
 
        Float grouponTaocanPrice = entity.getGrouponTaocanPrice();
        if (grouponTaocanPrice != null) {
            stmt.bindDouble(5, grouponTaocanPrice);
        }
 
        Float grouponTaocanBalancePrice = entity.getGrouponTaocanBalancePrice();
        if (grouponTaocanBalancePrice != null) {
            stmt.bindDouble(6, grouponTaocanBalancePrice);
        }
 
        String grouponTaocanDesc = entity.getGrouponTaocanDesc();
        if (grouponTaocanDesc != null) {
            stmt.bindString(7, grouponTaocanDesc);
        }
 
        Integer isAddToCashier = entity.getIsAddToCashier();
        if (isAddToCashier != null) {
            stmt.bindLong(8, isAddToCashier);
        }
 
        Integer isOnline = entity.getIsOnline();
        if (isOnline != null) {
            stmt.bindLong(9, isOnline);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public GrouponTaocanEntity readEntity(Cursor cursor, int offset) {
        GrouponTaocanEntity entity = new GrouponTaocanEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // grouponTaocanId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // grouponId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // grouponTaocanName
            cursor.isNull(offset + 4) ? null : cursor.getFloat(offset + 4), // grouponTaocanPrice
            cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5), // grouponTaocanBalancePrice
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // grouponTaocanDesc
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // isAddToCashier
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8) // isOnline
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, GrouponTaocanEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setGrouponTaocanId(cursor.getString(offset + 1));
        entity.setGrouponId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGrouponTaocanName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGrouponTaocanPrice(cursor.isNull(offset + 4) ? null : cursor.getFloat(offset + 4));
        entity.setGrouponTaocanBalancePrice(cursor.isNull(offset + 5) ? null : cursor.getFloat(offset + 5));
        entity.setGrouponTaocanDesc(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIsAddToCashier(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setIsOnline(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(GrouponTaocanEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(GrouponTaocanEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
