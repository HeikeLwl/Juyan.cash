package jufeng.juyancash.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "PRINT_CASHIER_ENTITY".
*/
public class PrintCashierEntityDao extends AbstractDao<PrintCashierEntity, Long> {

    public static final String TABLENAME = "PRINT_CASHIER_ENTITY";

    /**
     * Properties of entity PrintCashierEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property PrintType = new Property(1, Integer.class, "printType", false, "PRINT_TYPE");
        public final static Property PrintIp = new Property(2, String.class, "printIp", false, "PRINT_IP");
        public final static Property PrintSortType = new Property(3, Integer.class, "printSortType", false, "PRINT_SORT_TYPE");
        public final static Property IsOpenPrintSound = new Property(4, Integer.class, "isOpenPrintSound", false, "IS_OPEN_PRINT_SOUND");
        public final static Property PrintDesc = new Property(5, String.class, "printDesc", false, "PRINT_DESC");
        public final static Property PrintLogo = new Property(6, String.class, "printLogo", false, "PRINT_LOGO");
        public final static Property IsPrintVoucher = new Property(7, Integer.class, "isPrintVoucher", false, "IS_PRINT_VOUCHER");
        public final static Property VoucherIp = new Property(8, String.class, "voucherIp", false, "VOUCHER_IP");
        public final static Property VoucherCharNum = new Property(9, Integer.class, "voucherCharNum", false, "VOUCHER_CHAR_NUM");
        public final static Property VoucherType = new Property(10, Integer.class, "voucherType", false, "VOUCHER_TYPE");
        public final static Property IsPrintHuacai = new Property(11, Integer.class, "isPrintHuacai", false, "IS_PRINT_HUACAI");
        public final static Property HuacaiIp = new Property(12, String.class, "huacaiIp", false, "HUACAI_IP");
        public final static Property HuacaiCharNum = new Property(13, Integer.class, "huacaiCharNum", false, "HUACAI_CHAR_NUM");
        public final static Property HuacaiType = new Property(14, Integer.class, "huacaiType", false, "HUACAI_TYPE");
        public final static Property IsAutoPrintFinance = new Property(15, Integer.class, "isAutoPrintFinance", false, "IS_AUTO_PRINT_FINANCE");
        public final static Property IsAutoOpenFinanceBox = new Property(16, Integer.class, "isAutoOpenFinanceBox", false, "IS_AUTO_OPEN_FINANCE_BOX");
        public final static Property IsAutoOpenCustomerBox = new Property(17, Integer.class, "isAutoOpenCustomerBox", false, "IS_AUTO_OPEN_CUSTOMER_BOX");
        public final static Property IsPrintPresenter = new Property(18, Integer.class, "isPrintPresenter", false, "IS_PRINT_PRESENTER");
        public final static Property IsPrintTuicai = new Property(19, Integer.class, "isPrintTuicai", false, "IS_PRINT_TUICAI");
        public final static Property IsAutoPrintOrder = new Property(20, Integer.class, "isAutoPrintOrder", false, "IS_AUTO_PRINT_ORDER");
        public final static Property IsPrintQRCode = new Property(21, Integer.class, "isPrintQRCode", false, "IS_PRINT_QRCODE");
        public final static Property IsPrintDish = new Property(22, Integer.class, "isPrintDish", false, "IS_PRINT_DISH");
        public final static Property PrintDishType = new Property(23, Integer.class, "printDishType", false, "PRINT_DISH_TYPE");
        public final static Property PrintDishIp = new Property(24, String.class, "printDishIp", false, "PRINT_DISH_IP");
    }


    public PrintCashierEntityDao(DaoConfig config) {
        super(config);
    }
    
    public PrintCashierEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PRINT_CASHIER_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: id
                "\"PRINT_TYPE\" INTEGER," + // 1: printType
                "\"PRINT_IP\" TEXT," + // 2: printIp
                "\"PRINT_SORT_TYPE\" INTEGER," + // 3: printSortType
                "\"IS_OPEN_PRINT_SOUND\" INTEGER," + // 4: isOpenPrintSound
                "\"PRINT_DESC\" TEXT," + // 5: printDesc
                "\"PRINT_LOGO\" TEXT," + // 6: printLogo
                "\"IS_PRINT_VOUCHER\" INTEGER," + // 7: isPrintVoucher
                "\"VOUCHER_IP\" TEXT," + // 8: voucherIp
                "\"VOUCHER_CHAR_NUM\" INTEGER," + // 9: voucherCharNum
                "\"VOUCHER_TYPE\" INTEGER," + // 10: voucherType
                "\"IS_PRINT_HUACAI\" INTEGER," + // 11: isPrintHuacai
                "\"HUACAI_IP\" TEXT," + // 12: huacaiIp
                "\"HUACAI_CHAR_NUM\" INTEGER," + // 13: huacaiCharNum
                "\"HUACAI_TYPE\" INTEGER," + // 14: huacaiType
                "\"IS_AUTO_PRINT_FINANCE\" INTEGER," + // 15: isAutoPrintFinance
                "\"IS_AUTO_OPEN_FINANCE_BOX\" INTEGER," + // 16: isAutoOpenFinanceBox
                "\"IS_AUTO_OPEN_CUSTOMER_BOX\" INTEGER," + // 17: isAutoOpenCustomerBox
                "\"IS_PRINT_PRESENTER\" INTEGER," + // 18: isPrintPresenter
                "\"IS_PRINT_TUICAI\" INTEGER," + // 19: isPrintTuicai
                "\"IS_AUTO_PRINT_ORDER\" INTEGER," + // 20: isAutoPrintOrder
                "\"IS_PRINT_QRCODE\" INTEGER," + // 21: isPrintQRCode
                "\"IS_PRINT_DISH\" INTEGER," + // 22: isPrintDish
                "\"PRINT_DISH_TYPE\" INTEGER," + // 23: printDishType
                "\"PRINT_DISH_IP\" TEXT);"); // 24: printDishIp
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PRINT_CASHIER_ENTITY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PrintCashierEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer printType = entity.getPrintType();
        if (printType != null) {
            stmt.bindLong(2, printType);
        }
 
        String printIp = entity.getPrintIp();
        if (printIp != null) {
            stmt.bindString(3, printIp);
        }
 
        Integer printSortType = entity.getPrintSortType();
        if (printSortType != null) {
            stmt.bindLong(4, printSortType);
        }
 
        Integer isOpenPrintSound = entity.getIsOpenPrintSound();
        if (isOpenPrintSound != null) {
            stmt.bindLong(5, isOpenPrintSound);
        }
 
        String printDesc = entity.getPrintDesc();
        if (printDesc != null) {
            stmt.bindString(6, printDesc);
        }
 
        String printLogo = entity.getPrintLogo();
        if (printLogo != null) {
            stmt.bindString(7, printLogo);
        }
 
        Integer isPrintVoucher = entity.getIsPrintVoucher();
        if (isPrintVoucher != null) {
            stmt.bindLong(8, isPrintVoucher);
        }
 
        String voucherIp = entity.getVoucherIp();
        if (voucherIp != null) {
            stmt.bindString(9, voucherIp);
        }
 
        Integer voucherCharNum = entity.getVoucherCharNum();
        if (voucherCharNum != null) {
            stmt.bindLong(10, voucherCharNum);
        }
 
        Integer voucherType = entity.getVoucherType();
        if (voucherType != null) {
            stmt.bindLong(11, voucherType);
        }
 
        Integer isPrintHuacai = entity.getIsPrintHuacai();
        if (isPrintHuacai != null) {
            stmt.bindLong(12, isPrintHuacai);
        }
 
        String huacaiIp = entity.getHuacaiIp();
        if (huacaiIp != null) {
            stmt.bindString(13, huacaiIp);
        }
 
        Integer huacaiCharNum = entity.getHuacaiCharNum();
        if (huacaiCharNum != null) {
            stmt.bindLong(14, huacaiCharNum);
        }
 
        Integer huacaiType = entity.getHuacaiType();
        if (huacaiType != null) {
            stmt.bindLong(15, huacaiType);
        }
 
        Integer isAutoPrintFinance = entity.getIsAutoPrintFinance();
        if (isAutoPrintFinance != null) {
            stmt.bindLong(16, isAutoPrintFinance);
        }
 
        Integer isAutoOpenFinanceBox = entity.getIsAutoOpenFinanceBox();
        if (isAutoOpenFinanceBox != null) {
            stmt.bindLong(17, isAutoOpenFinanceBox);
        }
 
        Integer isAutoOpenCustomerBox = entity.getIsAutoOpenCustomerBox();
        if (isAutoOpenCustomerBox != null) {
            stmt.bindLong(18, isAutoOpenCustomerBox);
        }
 
        Integer isPrintPresenter = entity.getIsPrintPresenter();
        if (isPrintPresenter != null) {
            stmt.bindLong(19, isPrintPresenter);
        }
 
        Integer isPrintTuicai = entity.getIsPrintTuicai();
        if (isPrintTuicai != null) {
            stmt.bindLong(20, isPrintTuicai);
        }
 
        Integer isAutoPrintOrder = entity.getIsAutoPrintOrder();
        if (isAutoPrintOrder != null) {
            stmt.bindLong(21, isAutoPrintOrder);
        }
 
        Integer isPrintQRCode = entity.getIsPrintQRCode();
        if (isPrintQRCode != null) {
            stmt.bindLong(22, isPrintQRCode);
        }
 
        Integer isPrintDish = entity.getIsPrintDish();
        if (isPrintDish != null) {
            stmt.bindLong(23, isPrintDish);
        }
 
        Integer printDishType = entity.getPrintDishType();
        if (printDishType != null) {
            stmt.bindLong(24, printDishType);
        }
 
        String printDishIp = entity.getPrintDishIp();
        if (printDishIp != null) {
            stmt.bindString(25, printDishIp);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PrintCashierEntity readEntity(Cursor cursor, int offset) {
        PrintCashierEntity entity = new PrintCashierEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // printType
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // printIp
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // printSortType
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // isOpenPrintSound
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // printDesc
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // printLogo
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // isPrintVoucher
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // voucherIp
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // voucherCharNum
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // voucherType
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // isPrintHuacai
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // huacaiIp
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // huacaiCharNum
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // huacaiType
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // isAutoPrintFinance
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // isAutoOpenFinanceBox
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // isAutoOpenCustomerBox
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // isPrintPresenter
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // isPrintTuicai
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // isAutoPrintOrder
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // isPrintQRCode
            cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22), // isPrintDish
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // printDishType
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24) // printDishIp
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PrintCashierEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setPrintType(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setPrintIp(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPrintSortType(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setIsOpenPrintSound(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setPrintDesc(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPrintLogo(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIsPrintVoucher(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setVoucherIp(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setVoucherCharNum(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setVoucherType(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setIsPrintHuacai(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setHuacaiIp(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setHuacaiCharNum(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setHuacaiType(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setIsAutoPrintFinance(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setIsAutoOpenFinanceBox(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setIsAutoOpenCustomerBox(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setIsPrintPresenter(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setIsPrintTuicai(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setIsAutoPrintOrder(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setIsPrintQRCode(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setIsPrintDish(cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22));
        entity.setPrintDishType(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setPrintDishIp(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(PrintCashierEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(PrintCashierEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
