package jufeng.juyancash.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "SOME_DISCOUNT_GOODS_ENTITY".
*/
public class SomeDiscountGoodsEntityDao extends AbstractDao<SomeDiscountGoodsEntity, Long> {

    public static final String TABLENAME = "SOME_DISCOUNT_GOODS_ENTITY";

    /**
     * Properties of entity SomeDiscountGoodsEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property SomeDiscountGoodsId = new Property(1, String.class, "someDiscountGoodsId", false, "SOME_DISCOUNT_GOODS_ID");
        public final static Property DiscountHistoryId = new Property(2, String.class, "discountHistoryId", false, "DISCOUNT_HISTORY_ID");
        public final static Property OrderDishId = new Property(3, String.class, "orderDishId", false, "ORDER_DISH_ID");
        public final static Property DishId = new Property(4, String.class, "dishId", false, "DISH_ID");
    }


    public SomeDiscountGoodsEntityDao(DaoConfig config) {
        super(config);
    }
    
    public SomeDiscountGoodsEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SOME_DISCOUNT_GOODS_ENTITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE ," + // 0: id
                "\"SOME_DISCOUNT_GOODS_ID\" TEXT NOT NULL UNIQUE ," + // 1: someDiscountGoodsId
                "\"DISCOUNT_HISTORY_ID\" TEXT," + // 2: discountHistoryId
                "\"ORDER_DISH_ID\" TEXT," + // 3: orderDishId
                "\"DISH_ID\" TEXT);"); // 4: dishId
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SOME_DISCOUNT_GOODS_ENTITY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SomeDiscountGoodsEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getSomeDiscountGoodsId());
 
        String discountHistoryId = entity.getDiscountHistoryId();
        if (discountHistoryId != null) {
            stmt.bindString(3, discountHistoryId);
        }
 
        String orderDishId = entity.getOrderDishId();
        if (orderDishId != null) {
            stmt.bindString(4, orderDishId);
        }
 
        String dishId = entity.getDishId();
        if (dishId != null) {
            stmt.bindString(5, dishId);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public SomeDiscountGoodsEntity readEntity(Cursor cursor, int offset) {
        SomeDiscountGoodsEntity entity = new SomeDiscountGoodsEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // someDiscountGoodsId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // discountHistoryId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // orderDishId
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // dishId
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SomeDiscountGoodsEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setSomeDiscountGoodsId(cursor.getString(offset + 1));
        entity.setDiscountHistoryId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setOrderDishId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDishId(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(SomeDiscountGoodsEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(SomeDiscountGoodsEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
